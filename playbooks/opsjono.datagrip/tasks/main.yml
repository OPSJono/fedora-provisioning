---
# Install & Configure DataGrip

- name: List installed packages
  shell: |
    flatpak list
  register: output
  changed_when: false

- name: Set if DataGrip is installed already
  set_fact:
    datagrip_installed: true
  when: output.stdout | join('') is search(datagrip_package_name)

- name: Install DataGrip using Flakpak (via Shell) if it isn't installed already
  shell: |
    flatpak install {{ datagrip_package_name }} -y > /dev/null 2>&1
  become: true
  become_user: root
  when: datagrip_installed != true

- name: Update DataGrip using Flakpak (via Shell) if it is already installed
  shell: |
    flatpak update {{ datagrip_package_name }} -y > /dev/null 2>&1
  become: true
  become_user: root
  when: datagrip_installed == true

- name: Ensure directory for the icon exists
  file:
    path: /opt/datagrip
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0775
    state: directory

- name: Copy DataGrip icon into place
  copy:
    src: icon.png
    dest: /opt/datagrip/icon.png

- name: Install datagrip.desktop file
  copy:
    src: datagrip.desktop
    dest: /usr/share/applications/datagrip.desktop

- name: Register desktop file
  command: update-desktop-database /usr/share/applications/
  become: true
  become_user: root
  changed_when: false

- name: Ensure DataGrip preferences folder exists
  file:
    path: "/home/{{ ansible_user }}/.config/JetBrains/DataGrip{{ datagrip_version }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0775
  become: true
  become_user: "{{ ansible_user }}"

- name: List all DataGrip preference files
  find:
    paths: "opsjono.datagrip/files/preferences/"
    recurse: yes
  register: found_files

- name: Save those preference files to a loopable variable
  set_fact:
    preference_files:
      - "{{ found_files.files | map(attribute='path') }}"

- name: Copy personal preferences to the DataGrip directory
  copy:
    src: "{{ item }}"
    dest: "/home/{{ ansible_user }}/.config/JetBrains/DataGrip{{ datagrip_version }}/"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  with_items:
    - "{{ preference_files[0] }}"